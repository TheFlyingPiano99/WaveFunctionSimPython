# We simulate the time-development of the wave function in an N_x x N_y x N_z sized box
# The origin of the coordinate system is in the center of the simulated volume
# We use a right-handed system, where +Y is the upward direction
# Values are given in the Hartree atomic unit system

# The naming convention is as follows: <descriptive name>_<measurement unit if any>_<vector dimension count if greater than 1>

# Free space simulation from Web Schr√∂dinger

[simulation]
method = "fourier"
order_of_approximation = 10  # Only used for the Power Series Method
delta_time_h_bar_per_hartree = 0.1
total_iteration_count = 600
is_dynamic_potential_mode = false
enable_wave_function_saving = true
wave_function_save_iteration_interval = 100
double_precision_calculation = true

[wave_packet]
path = ""   # Can load pre-initialized wave function from file. (Other WP parameters will be discarded.)
particle_mass_electron_rest_mass = 1.0
initial_position_bohr_radii_3 = [-30.0, 0.0, 0.0]
initial_velocity_bohr_radii_hartree_per_h_bar_3 = [1.0, 0.0, 0.0]
initial_standard_deviation_bohr_radii_3 = [8.0, 8.0, 8.0]

[volume]
simulated_volume_dimensions_bohr_radii_3 = [128.0, 128.0, 128.0] #Including absorbing potential regions
number_of_voxels_3 = [512, 256, 256]         #Including absorbing potential regions
observation_box_bottom_corner_bohr_radii_3 = [-50.0, -50.0, -50.0]   # Same as the inner boundary of the draining potential
observation_box_top_corner_bohr_radii_3 = [50.0, 50.0, 50.0]   # Same as the inner boundary of the draining potential

[absorbing_boundary_condition]
outer_potential_in_positive_xyz_direction_hartree_3 = [-100.0, -10.0, -10.0]
outer_potential_in_negative_xyz_direction_hartree_3 = [-100.0, -10.0, -10.0]
start_offset = 1.0
slope_exponent_in_positive_xyz_direction_3 = [3.0, 3.0, 3.0]    # e: f(x) = x^e,    x in [0, 1]
slope_exponent_in_negative_xyz_direction_3 = [3.0, 3.0, 3.0]    # e: f(x) = x^e,    x in [0, 1]
enable = false

[potential.pre_initialized_potential]
path = "potentials/potential01.bin"
enable = true
visible = true
float_type = "complex64"    # How to interpret the binary data? Available types: float32, float64, complex64, complex128

[measurement.volumetric]
camera_rotation_speed = -0.5
camera_azimuth = -10.0
camera_elevation = 10.0
light_direction = [1.0, 1.0, -1.0]
light_rotation_speed = 0.001
light_elevation_speed = 0.0
animation_frame_rate = 25
animation_frame_capture_iteration_interval = 50
image_capture_iteration_interval = 5
enable_animation = false
enable_image = false

[measurement.per_axis_plot]
title = "Per-axis plot"
x_axis_label = "X axis"
y_axis_label = "Y axis"
z_axis_label = "Z axis"
potential_label = "Potential"
potential_plot_offset = -0.34
potential_plot_scale = 0.02
animation_frame_rate = 25
animation_frame_capture_iteration_interval = 50
image_capture_iteration_interval = 100
enable_animation = false
enable_image = false

[measurement.expected_location]
enable_image = true

[[measurement.volume_probabilities]]
name = "First half"
bottom_corner_bohr_radii_3 = [-50.0, -50.0, -50.0]
top_corner_bohr_radii_3 = [0.0, 50.0, 50.0]
enable_image = true

[[measurement.volume_probabilities]]
name = "Second half"
bottom_corner_bohr_radii_3 = [0.0, -50.0, -50.0]
top_corner_bohr_radii_3 = [50.0, 50.0, 50.0]
enable_image = true

[[measurement.plane_probability_currents]]
name = "First plane"
center_bohr_radii_3 = [-5.0, 0.0, 0.0]
normal_vector_3 = [1.0, 0.0, 0.0]
size_bohr_radii_2 = [100.0, 100.0]
resolution_2 = [255, 255]
enable_image = true

[[measurement.plane_probability_currents]]
name = "Second plane"
center_bohr_radii_3 = [5.0, 0.0, 0.0]
normal_vector_3 = [1.0, 0.0, 0.0]
size_bohr_radii_2 = [100.0, 100.0]
resolution_2 = [255, 255]
enable_image = true

[paths]
cache_dir = "./cache"
output_dir = "./output"
